import * as aws from 'aws-sdk';
import { PromiseResult } from 'aws-sdk/lib/request';
import { S3PayloadMeta } from './types';
export interface SnsProducerOptions {
    topicArn?: string;
    region?: string;
    largePayloadThoughS3?: boolean;
    allPayloadThoughS3?: boolean;
    s3Bucket?: string;
    sns?: aws.SNS;
    s3?: aws.S3;
    snsEndpointUrl?: string;
    s3EndpointUrl?: string;
    messageSizeThreshold?: number;
    extendedLibraryCompatibility?: boolean;
}
export interface PublishResult {
    snsResponse: any;
    s3Response?: any;
}
export declare const DEFAULT_MAX_SNS_MESSAGE_SIZE: number;
export declare class SnsProducer {
    private topicArn;
    private sns;
    private s3;
    private largePayloadThoughS3;
    private allPayloadThoughS3;
    private s3Bucket;
    private messageSizeThreshold;
    private extendedLibraryCompatibility;
    constructor(options: SnsProducerOptions);
    static create(options: SnsProducerOptions): SnsProducer;
    publishJSON(message: unknown): Promise<PublishResult>;
    publishS3Payload(s3PayloadMeta: S3PayloadMeta, msgSize: number): Promise<PromiseResult<aws.SNS.PublishResponse, aws.AWSError>>;
}
