import * as aws from 'aws-sdk';
import { PromiseResult } from 'aws-sdk/lib/request';
import { S3PayloadMeta } from './types';
export declare const DEFAULT_MAX_SQS_MESSAGE_SIZE: number;
export interface SqsProducerOptions {
    queueUrl: string;
    region?: string;
    largePayloadThoughS3?: boolean;
    allPayloadThoughS3?: boolean;
    s3Bucket?: string;
    sqs?: aws.SQS;
    s3?: aws.S3;
    sqsEndpointUrl?: string;
    s3EndpointUrl?: string;
    messageSizeThreshold?: number;
    extendedLibraryCompatibility?: boolean;
}
export interface SqsMessageOptions {
    DelaySeconds?: number;
    MessageDeduplicationId?: string;
    MessageGroupId?: string;
}
export declare class SqsProducer {
    private sqs;
    private s3;
    private queueUrl;
    private largePayloadThoughS3;
    private allPayloadThoughS3;
    private s3Bucket;
    private messageSizeThreshold;
    private extendedLibraryCompatibility;
    constructor(options: SqsProducerOptions);
    static create(options: SqsProducerOptions): SqsProducer;
    sendJSON(message: unknown, options?: SqsMessageOptions): Promise<any>;
    sendS3Payload(s3PayloadMeta: S3PayloadMeta, msgSize: number, options?: SqsMessageOptions): Promise<PromiseResult<aws.SQS.SendMessageResult, aws.AWSError>>;
}
